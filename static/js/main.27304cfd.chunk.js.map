{"version":3,"sources":["PatternSelect.jsx","Svg.js","Guessbox.jsx","Pad.jsx","Header.jsx","Game.jsx","Analytics.jsx","GameLogic.jsx","static.js","serviceWorkerRegistration.js","index.js"],"names":["PatternSelect","letters","onClear","setValue","onSubmit","moveEvent","svgns","PatternLock","useCallback","element","currentline","currenthandler","scrollKeys","svg","$","root","dots","find","lines","actives","pt","createSVGPoint","code","getPattern","map","i","attributes","data","value","join","a","enableScroll","stopTrack","remove","off","discoverDot","pattern","clear","length","document","getElementById","setAttribute","undefined","removeClass","empty","preventDefault","e","preventDefaultForScrollKeys","keyCode","window","removeEventListener","onmousewheel","onwheel","ontouchmove","onkeydown","updateLine","line","pos","getMousePos","x","y","matrixTransform","getScreenCTM","inverse","svgPosition","target","elementFromPoint","isAvailable","isUsed","push","getAttribute","x1","y1","x2","y2","createElementNS","createNewLine","marker","createNewMarker","append","on","beginTrack","clientX","originalEvent","touches","clientY","addEventListener","disableScroll","endEvent","type","one","end","useEffect","getCoordinates","index","alpha","Math","PI","cos","sin","getCircleCoordinates","style","display","justifyContent","padding","width","height","background","borderRadius","className","id","viewBox","xmlns","l","Fragment","textAnchor","fill","fontSize","dy","toUpperCase","cx","cy","r","opacity","iconClose","d","lettersToState","used","Guessbox","propsLetters","onGuess","renderHistory","score","elapsed","useState","setLetters","showScoreList","setShowScoreList","handleShuffle","array","slice","j","floor","random","shuffle","handleRenderList","Array","from","onClick","title","val","JSON","stringify","guess","words","known","unused","miss","repeat","Pad","pad","rows","cols","hintLimit","onHint","guesses","renderRow","p","k","opt","hint","key","renderCell","levels","easy","medium","advanced","expert","themes","Header","theme","level","onReload","onTheme","toggle","setToggle","toggleHandler","headerClass","headerItemClass","String","padStart","Object","keys","new_theme","alert","Game","renderLi","w","this","props","history","filter","version","flexDirection","React","Component","isGAEnabled","TRACKING_ID","directions","Down","start","Across","mapWord","word","dir","s","mapDirection","calculatePad","crossword","range","iter","inc","schema_migrations","state","schema","gameplay","previous","Date","now","current","finished","checkFinished","values","every","stateFromCrossword","location","hash","console","log","size","crosswords","getCrossword","Set","sort","state_key","restoreState","store","localStorage","ser","getItem","validate_schema_migrations","parse","saveState","setItem","GameLogic","startTick","_tick","clearInterval","setInterval","handleTick","_timer","setState","onLevel","history_entry","is_w","score_update","ReactGA","event","category","action","label","dimension1","logGuess","hits","concat","hit","f","newState","cell","handleHint","handleGuess","handleReload","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","App","levelKey","setLevel","themeKey","setTheme","t","initialize","pageview","pathname","search","init","ReactDOM","render","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.27304cfd.chunk.js","sourcesContent":["import React, { useEffect, useCallback } from \"react\"\nimport $ from \"jquery\"\n\nconst PatternSelect = ({letters, onClear, setValue, onSubmit}) => {\n    const moveEvent = 'touchstart mousedown touchmove mousemove'\n    const svgns = 'http://www.w3.org/2000/svg'\n  \n    const PatternLock = useCallback((element) => {\n        const scrollKeys = {\n            37: true, // left\n            38: true, // up\n            39: true, // right\n            40: true, // down\n            32: true, // spacebar\n            33: true, // pageup\n            34: true, // pagedown\n            35: true, // end\n            36: true, // home\n        };\n        \n        let svg = $(element)\n        let root = svg[0]\n        let dots = svg.find('.lock-dots circle')\n        let lines = svg.find('.lock-lines')\n        let actives = svg.find('.lock-actives')\n        const pt = root.createSVGPoint();\n        let code = []\n        let currentline\n        let currenthandler\n\n        svg.on('touchstart mousedown', (e) => {\n            clear()\n            e.preventDefault()\n            disableScroll()\n            discoverDot(e)\n            svg.on(moveEvent, discoverDot)\n            let endEvent = e.type === 'touchstart' ? 'touchend' : 'mouseup';\n            $(document).one(endEvent, (e) => {\n                end()\n            })\n        })\n\n        function getPattern() {\n            const pattern = code.map((i) => i.attributes.data.value).join('')\n            return pattern\n        }\n\n        async function end() {\n            enableScroll()\n            stopTrack(currentline)\n            currentline && currentline.remove()\n            svg.off(moveEvent, discoverDot)\n            const pattern = getPattern()\n            await setValue(pattern)\n            await onSubmit(pattern)\n            await clear();\n            for (let i = 0; i < letters.length; i++){\n                document.getElementById(`letter_${i}`).setAttribute(\"fill\", \"var(--c-tertiary)\")\n            }\n            \n            // console.log(pattern)\n        }\n\n        function clear() {\n            code = []\n            currentline = undefined\n            currenthandler = undefined\n            svg.removeClass('success error')\n            lines.empty()\n            actives.empty()\n            onClear()\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n\n        }\n\n        function preventDefaultForScrollKeys(e) {\n            if (scrollKeys[e.keyCode]) {\n                preventDefault(e);\n                return false;\n            }\n        }\n\n        function disableScroll() {\n            if (window.addEventListener) // older FF\n                window.addEventListener('DOMMouseScroll', preventDefault, false);\n            window.onwheel = preventDefault; // modern standard\n            window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\n            window.ontouchmove = preventDefault; // mobile\n            document.onkeydown = preventDefaultForScrollKeys;\n        }\n\n        function enableScroll() {\n            if (window.removeEventListener)\n                window.removeEventListener('DOMMouseScroll', preventDefault, false);\n            window.onmousewheel = document.onmousewheel = null;\n            window.onwheel = null;\n            window.ontouchmove = null;\n            document.onkeydown = null;\n        }\n\n        function isUsed(target) {\n            for (let i = 0; i < code.length; i++) {\n                if (code[i] === target) {\n                    return true\n                }\n            }\n            return false\n        }\n\n        function isAvailable(target) {\n            for (let i = 0; i < dots.length; i++) {\n                if (dots[i] === target) {\n                    return true\n                }\n            }\n            return false\n        }\n\n        function updateLine(line) {\n            return function(e) {\n                e.preventDefault()\n                if (currentline !== line) return\n                let pos = svgPosition(e.target, e)\n                line.setAttribute('x2', pos.x)\n                line.setAttribute('y2', pos.y)\n                return false\n            }\n        }\n\n        function discoverDot(e, target) {\n            if (!target) {\n                let {x, y} = getMousePos(e)\n                target = document.elementFromPoint(x, y);\n            }\n            if (isAvailable(target) && !isUsed(target)) {\n                stopTrack(currentline, target)\n                currentline = beginTrack(target)\n            }\n        }\n\n        function stopTrack(line, target) {\n            if (line === undefined) return\n            if (currenthandler) {\n                svg.off('touchmove mousemove', currenthandler)\n            }\n            if (target === undefined) return\n            let x = target.getAttribute('x') || target.getAttribute(\"cx\")\n            let y = target.getAttribute('y') || target.getAttribute(\"cy\")\n            line.setAttribute('x2', x)\n            line.setAttribute('y2', y)\n        }\n\n        function beginTrack(target) { \n            code.push(target)\n            setValue(code?.map((i) => i.attributes.data.value).join(''))\n            let x = target.getAttribute('x') ||  target.getAttribute(\"cx\")\n            let y = target.getAttribute('y') || target.getAttribute(\"cy\") \n            const line = createNewLine(x, y)\n            const marker = createNewMarker(x, y)\n            document.getElementById(`letter_${target.getAttribute(`id`)}`).setAttribute(\"fill\", \"var(--c-primary)\")\n            actives.append(marker)\n            currenthandler = updateLine(line)\n            svg.on('touchmove mousemove', currenthandler)\n            lines.append(line);\n            return line\n        }\n\n        function createNewMarker(x, y) {\n            const marker = document.createElementNS(svgns, \"circle\")\n            marker.setAttribute('cx', x)\n            marker.setAttribute('cy', y)\n            marker.setAttribute('r', 10)\n            \n            return marker\n        }\n\n        function createNewLine(x1, y1, x2, y2) {\n            const line = document.createElementNS(svgns, \"line\")\n            line.setAttribute('x1', x1)\n            line.setAttribute('y1', y1)\n            if (x2 === undefined || y2 === undefined) {\n                line.setAttribute('x2', x1)\n                line.setAttribute('y2', y1)\n            } else {\n                line.setAttribute('x2', x2)\n                line.setAttribute('y2', y2)\n            }\n            return line\n        }\n\n        function getMousePos(e) {\n            return {\n                x: e.clientX || e?.originalEvent?.touches[0]?.clientX || 0,\n                y :e.clientY || e?.originalEvent?.touches[0]?.clientY || 0\n            }\n        }\n\n        function svgPosition(element, e) {\n            let {x, y} = getMousePos(e)\n            pt.x = x; pt.y = y;\n            return pt.matrixTransform(element.getScreenCTM().inverse());\n        }\n\n    \n    }, [onClear, onSubmit, letters.length, setValue])\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => PatternLock(\"#lock\") , [])\n\n    const getCoordinates = (index) => {\n        const alpha = 2 * Math.PI * index / letters.length \n        const x =  62.5 + 46 * Math.cos(alpha)\n        const y = 62.5 + 46 * Math.sin(alpha)\n        return {x: x, y: y}\n    }\n\n    const getCircleCoordinates = (index) => {\n        const alpha = 2 * Math.PI * index / letters.length \n        const x =  62.5 + 63 * Math.cos(alpha)\n        const y = 62.5 + 63 * Math.sin(alpha)\n        return {x: x, y: y}\n    }\n\n    return (\n        \n    <div style={{display: \"flex\", justifyContent:\"center\", padding: 20}}>\n        <svg style={{width: 250, height: 250, background: \"var(--c-secondary)\", borderRadius: \"50%\"}} className=\"patternlock\" id=\"lock\" viewBox=\"0 0 125 125\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g className=\"lock-actives\"></g>\n                <g className=\"lock-lines\"></g>\n                <g className=\"lock-dots\">\n                    {letters && letters.length && letters.map((l,i) => {\n                        return(\n                            <React.Fragment key={i}>\n                                <text className=\"svgtxt\" value={l.l} id={`letter_${i}`} textAnchor=\"middle\" x={getCoordinates(i).x} y={getCoordinates(i).y} fill=\"var(--c-tertiary)\" fontSize=\"0.8em\"  dy=\".3em\">{l.l.toUpperCase()}</text>\n                                <circle index={i} data={l.l}  id={i} cx={getCircleCoordinates(i).x} cy={getCircleCoordinates(i).y} x={getCoordinates(i).x} y={getCoordinates(i).y} r={12} fill=\"#0000FF\" opacity=\"0\" />\n                            </React.Fragment>\n                        )}\n                    )}\n                    \n                </g>\n            </svg>\n        </div>\n    )\n\n}\nexport default PatternSelect\n","export function iconKey() {\n\treturn (\n\t\t<svg viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M0 22C0 2.2 2.2 0 22 0C41.8 0 44 2.2 44 22C44 41.8 41.8 44 22 44C2.2 44 0 41.8 0 22Z\" />\n\t\t</svg>\n\t);\n}\n\nexport function iconList () {\n\treturn (\n\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M3 13H5V11H3V13ZM3 17H5V15H3V17ZM3 9H5V7H3V9ZM7 13H21V11H7V13ZM7 17H21V15H7V17ZM7 7V9H21V7H7Z\" />\n\t\t</svg>\n\t);\n};\n\nexport function iconConfirm() {\n\treturn (\n\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M9 16.17L4.83 12L3.41 13.41L9 19L21 7L19.59 5.59L9 16.17Z\"/>\n\t\t</svg>\n\t);\n};\n\nexport function iconShuffle () {\n\treturn (\n\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M17.3484 8.49844H18.7031V10.7156L22.5 6.81562L18.7031 3V5.53125H17.3484C13.4719 5.53125 11.2828 8.43281 9.35156 10.9922C7.61719 13.2937 6.11719 15.4641 3.69844 15.4641H1.5V18.4313H3.69844C7.575 18.4313 9.76406 15.3469 11.6953 12.7875C13.4297 10.4859 14.925 8.49844 17.3484 8.49844ZM7.18125 10.1953C7.34531 9.97969 7.51406 9.75937 7.68281 9.53437C8.09531 8.99062 8.52656 8.41406 8.99531 7.84219C7.60781 6.53438 5.93438 5.56875 3.69844 5.56875H1.5V8.53594C1.5 8.53594 2.12344 8.50781 3.69844 8.53594C5.22188 8.56875 6.17812 9.19688 7.18125 10.1953ZM18.7031 15.4875H17.3484C15.8719 15.4875 14.7375 14.7469 13.6828 13.6453C13.5797 13.7859 13.4719 13.9266 13.3641 14.0672C12.9 14.6813 12.4031 15.3422 11.8547 15.9938C13.2797 17.3953 15.0047 18.4547 17.3484 18.4547H18.7031V21L22.5 17.1844L18.7031 13.2844V15.4875Z\"/>\n\t\t</svg>\n\t);\n};\n\nexport function iconClear() {\n\treturn (\n\t\t<svg viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M3.8995 3.89949C-0.00373149 7.80272 -0.00373149 14.1384 3.8995 18.0416C7.80273 21.9449 14.1384 21.9449 18.0416 18.0416C21.9449 14.1384 21.9449 7.80272 18.0416 3.89949C14.1384 -0.00373506 7.80273 -0.0037354 3.8995 3.89949ZM15.2132 8.14213L12.3848 10.9706L15.2132 13.799L13.799 15.2132L10.9706 12.3848L8.14214 15.2132L6.72792 13.799L9.55635 10.9706L6.72792 8.14213L8.14214 6.72792L10.9706 9.55635L13.799 6.72792L15.2132 8.14213Z\"/>\n\t\t</svg>\n\t);\n}\n\nexport function iconTime(){\n\treturn (\n\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M15 1H9V3H15V1ZM11 14H13V8H11V14ZM19.03 7.39L20.45 5.97C20.02 5.46 19.55 4.98 19.04 4.56L17.62 5.98C16.07 4.74 14.12 4 12 4C7.03 4 3 8.03 3 13C3 17.97 7.02 22 12 22C16.98 22 21 17.97 21 13C21 10.88 20.26 8.93 19.03 7.39ZM12 20C8.13 20 5 16.87 5 13C5 9.13 8.13 6 12 6C15.87 6 19 9.13 19 13C19 16.87 15.87 20 12 20Z\" />\n\t\t</svg>\n\t)\n}\n\nexport function iconSettings() {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n\t\t\t<path d=\"M19.14 12.936C19.176 12.636 19.2 12.324 19.2 12C19.2 11.676 19.176 11.364 19.128 11.064L21.156 9.48002C21.336 9.33602 21.384 9.07202 21.276 8.86802L19.356 5.54402C19.236 5.32802 18.984 5.25602 18.768 5.32802L16.38 6.28802C15.876 5.90402 15.348 5.59202 14.76 5.35202L14.4 2.80802C14.364 2.56802 14.16 2.40002 13.92 2.40002H10.08C9.84 2.40002 9.648 2.56802 9.612 2.80802L9.252 5.35202C8.664 5.59202 8.124 5.91602 7.632 6.28802L5.244 5.32802C5.028 5.24402 4.776 5.32802 4.656 5.54402L2.736 8.86802C2.616 9.08402 2.664 9.33602 2.856 9.48002L4.884 11.064C4.836 11.364 4.8 11.688 4.8 12C4.8 12.312 4.824 12.636 4.872 12.936L2.844 14.52C2.664 14.664 2.616 14.928 2.724 15.132L4.644 18.456C4.764 18.672 5.016 18.744 5.232 18.672L7.62 17.712C8.124 18.096 8.652 18.408 9.24 18.648L9.6 21.192C9.648 21.432 9.84 21.6 10.08 21.6H13.92C14.16 21.6 14.364 21.432 14.388 21.192L14.748 18.648C15.336 18.408 15.876 18.084 16.368 17.712L18.756 18.672C18.972 18.756 19.224 18.672 19.344 18.456L21.264 15.132C21.384 14.916 21.336 14.664 21.144 14.52L19.14 12.936ZM12 15.6C10.02 15.6 8.4 13.98 8.4 12C8.4 10.02 10.02 8.40002 12 8.40002C13.98 8.40002 15.6 10.02 15.6 12C15.6 13.98 13.98 15.6 12 15.6Z\"/>\n\t\t</svg>\n\t)\n}\nexport function iconClose() {\n\treturn (\n\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z\"/>\n\t\t</svg>\n\t\n\t)\n}\n","import React, {useState, useEffect} from \"react\";\nimport PatternSelect from './PatternSelect';\nimport {iconList, iconShuffle, iconClose} from \"./Svg\";\n\nfunction shuffle(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nfunction lettersToState(letters) {\n    return letters.map((x) => ({l: x, used: false}));\n}\n\nconst Guessbox = ({propsLetters, onGuess, renderHistory, elapsed, score}) => {\n    const [letters, setLetters] = useState(lettersToState(propsLetters));\n    const [value, setValue] = useState(\"\");\n\t\tconst [showScoreList, setShowScoreList] = useState(false);\n\n    useEffect(()=>setLetters(lettersToState(propsLetters)), [propsLetters])\n\n    function handleSubmit(val) {\n        if (val.length < 3)\n            return;\n        onGuess(val);\n        clear();\n    }\n\n    function handleShuffle() {\n        setLetters(shuffle(letters));\n    }\n\t\n\tfunction handleRenderList() {\n\t\tsetShowScoreList(!showScoreList);\n\t}\n\n    function handleClear() {\n        clear();\n    }\n\n    function clear() {\n        setLetters(letters.map(l => ({...l, used:false})));\n        setValue(\"\");\n    }\n\t\t\n\t\tfunction renderScore() {\n\t\t\treturn (\n\t\t\t\t<div className=\"c-dialog\">\n\t\t\t\t\t<div className=\"c-dialog__container\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={ (e) => handleRenderList() }\n\t\t\t\t\t\t\tclassName=\"c-dialog__close\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ iconClose() }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<h1>Točke</h1>\n\t\t\t\t\t\t<div className=\"o-grid o-grid__twoCol o-grid__twoCol--2_1\">\n\t\t\t\t\t\t\t<div>Uganjene / Vse</div>\n\t\t\t\t\t\t\t<div className=\"u-text-right\">{score.guess}/{score.words}</div>\n\t\t\t\t\t\t\t<div>Znane / Neuporabljene</div>\n\t\t\t\t\t\t\t<div className=\"u-text-right\">{score.known}/{score.unused} </div>\n\t\t\t\t\t\t\t<div>Napacne besede</div>\n\t\t\t\t\t\t\t<div className=\"u-text-right\">{score.miss}</div>\n\t\t\t\t\t\t\t<div>Ponovljene besede</div>\n\t\t\t\t\t\t\t<div className=\"u-text-right\">{score.repeat} </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{ renderHistory() }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n    return (\n        <>\n\t\t\t\t\t<div className=\"c-word\">\n\t\t\t\t\t\t\t{ value &&\n\t\t\t\t\t\t\t\t\t<div className=\"c-word__container\">\n\t\t\t\t\t\t\t\t\t\t\t{Array.from(value).map((l,i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span key={i}>{l}</span>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"c-selection\">\n\t\t\t\t\t\t\t<div className=\"c-selection__side c-selection__side--left\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"c-btn c-btn--round\"\n\t\t\t\t\t\t\t\t\tonClick={ (e) => handleRenderList() }>\n\t\t\t\t\t\t\t\t\t{ iconList() }\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"c-selection__side c-selection__side--right\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"c-btn c-btn--round\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => handleShuffle()}\n\t\t\t\t\t\t\t\t\ttitle=\"Shuffle\">\n\t\t\t\t\t\t\t\t\t{ iconShuffle() }\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n              <React.Fragment key={JSON.stringify(letters)}>\n                <PatternSelect\n                  letters={letters}\n                  onClear={handleClear}\n                  setValue={setValue}\n                  onSubmit={handleSubmit}\n                />\n              </React.Fragment>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ showScoreList && renderScore() }\n        </>\n    );\n};\n\nexport default Guessbox;\n","import React from \"react\";\n\nconst Pad = ({pad, rows, cols, hintLimit, onHint, guesses, score}) => {\n    function renderCell(x,y) {\n\t\t\t\tconst className = \"c-table__cell\"\n        let p = pad[[x,y]];\n        let k = x;\n        let l;\n        let opt = {};\n        if (p === undefined) {\n            opt.className=`${className} ${className}--null`;\n            l = \" \";\n        } else if (p.guess === null && (p.hint || 0) < hintLimit) {\n            opt.className=`${className} ${className}--empty`;\n            opt.onClick = e => onHint(x,y);\n            l=\" \";\n        } else if (p.guess === null && (p.hint || 0) >= hintLimit) {\n            opt.className=`${className}`;\n            l=p.l;\n        } else if (p.guess < guesses.length) {\n            opt.className=`${className} ${className}--solved`;\n            l=p.l;\n        } else {\n            opt.className=`${className} ${className}--solved ${className}--guessed`;\n            l=p.l;\n        }\n\n        if (p && p.hint && p.hint >= hintLimit) {\n            opt.className += ` ${className}--hint`;\n        }\n\n        return (\n\t\t\t\t\t<div {...opt} key={k}>\n\t\t\t\t\t\t\t<span>{l}</span>\n\t\t\t\t\t</div>\n        );\n    }\n\n    function renderRow(y) {\n        return (\n            <div className=\"c-table__row\" key={y}>\n                {cols.map(x => renderCell(x,y))}\n            </div>\n        );\n    }\n\n    function renderPad() {\n        return (\n\t\t\t\t\t<div className=\"c-table\">\n\t\t\t\t\t\t{rows.map(y => renderRow(y))}\n\t\t\t\t\t</div>\n        );\n    }\n\n    return (\n\t\t\trenderPad()\n    );\n};\n\nexport default Pad;\n","import React, { useState } from \"react\";\nimport { iconTime, iconSettings, iconClose } from \"./Svg\";\n\nconst levels = {\n    easy:\"lahka\",\n    medium:\"srednja\",\n    advanced:\"tezka\",\n    expert:\"zelo tezka\",\n};\nconst themes = {\n    \"theme-light\": \"svetle\",\n    \"theme-dark\": \"temne\",\n};\nconst Header = ({theme, level, elapsed, score, onReload, onTheme}) => {\n    const [toggle, setToggle] = useState(false);\n    const toggleHandler = () => setToggle(!toggle);\n\n    function modalWindow() {\n        return (\n            <div className=\"c-dialog\">\n              <div className=\"c-dialog__container\">\n                <button\n                  onClick={ toggleHandler }\n                  className=\"c-dialog__close\"\n                >\n                  { iconClose() }\n                </button>\n                <h1>Nova igra</h1>\n                <ul>\n                  {Object.keys(levels).map((level) => {\n                      return (\n                          <li key={level}>\n                            <button onClick={(e) => onReload(level)} title=\"Reload\">\n                              {levels[level]}\n                            </button>\n                          </li>\n                      );\n                  })}\n                </ul>\n                <h1>Nastavi barve</h1>\n                <ul>\n                  {[\"theme-dark\", \"theme-light\"].map((new_theme) => {\n                      return (\n                          <li key={new_theme}>\n                            <button className={`${new_theme} c-table__cell--solved`}\n                                    onClick={(e) => {alert(theme + \" klik \"+new_theme );onTheme(new_theme);}}\n                                    title=\"Reload\">\n                              {new_theme === theme ? 'X' : 'O'} &nbsp;\n                              {themes[new_theme]}\n                            </button> &nbsp;&nbsp;&nbsp;\n                          </li>\n                      );\n                  })}\n                </ul>\n              </div>\n            </div>\n        );\n    }\n    \n    const headerClass = \"c-header\"\n    const headerItemClass = `${headerClass}__item`\n    \n    return (\n        <>\n          <header className={ headerClass }>\n            <div className={`${headerItemClass} ${headerItemClass}--left`}>\n              { iconTime() }\n              {Math.floor(elapsed / 60)}:{String(elapsed % 60).padStart(2,'0')}\n            </div>\n            <div className={`${headerItemClass} ${headerItemClass}--center`}>\n              {score.guess}/{score.words}\n              &nbsp;\n              ({levels[level]})\n            </div>\n            <div className={`${headerItemClass} ${headerItemClass}--right`}>\n              <button className=\"c-btn\"  onClick={ toggleHandler } >\n                { iconSettings() }\n              </button>\n            </div>\n          </header>\n          { toggle && modalWindow() }\n        </>\n    )\n};\n\nexport default Header;\n","import React from \"react\";\nimport { version } from '../package.json';\nimport Guessbox from './Guessbox';\nimport Pad from \"./Pad\";\nimport Header from \"./Header\";\n\nclass Game extends React.Component {\n    renderHistory() {\n        function renderLi(w, i, a) {\n            return (\n                <span key={w.k}\n                      className={((w.guess) ? \"guess\" :\n                                  ((w.known) ? \"known\" : \"weird\"))}>\n                  {w.w} {w.repeat &&\n                         <span>\n                           {\"➰\".repeat(w.repeat)}\n                         </span>}\n                  {(i < a.length - 1) && \", \"}\n                </span>);\n        }\n        return (\n            <div className=\"c-history\">\n              <p className=\"known\">ee \n                {this.props.history.filter((w)=>w.known && !w.guess).map(renderLi)}\n              </p>\n              <hr/>\n              <p className=\"unknown\">dd\n                {this.props.history.filter((w)=>!w.known && !w.guess).map(renderLi)}\n              </p>\n              <span className=\"app-version\">version: { version }</span>\n            </div>\n        );}\n\n\n    render() {\n        return (\n            <div\n\t\t\t\t\t\t\tstyle={{display: \"flex\", flexDirection:\"column\", justifyContent:\"space-between\", height: \"100vh\"}}\n\t\t\t\t\t\t\tclassName={`${this.props.theme} game`}>\n\t\t\t\t\t\t\t<Header\n                theme={this.props.theme}\n                level={this.props.level}\n\t\t\t\t\t\t\t\telapsed={this.props.elapsed}\n\t\t\t\t\t\t\t\tscore={this.props.score}\n\t\t\t\t\t\t\t\tonReload={this.props.onReload}\n                onTheme={this.props.onTheme}\n\t\t\t\t\t\t\t/>\n              <Pad\n                pad={this.props.pad}\n                cols={this.props.cols}\n                rows={this.props.rows}\n                hintLimit={this.props.hintLimit}\n                onHint={this.props.onHint}\n                guesses={this.props.guesses}\n                score={this.props.score} />\n              <Guessbox\n                propsLetters={this.props.letters}\n                onGuess={this.props.onGuess}\n                renderHistory={() => this.renderHistory()}\n                elapsed={this.props.elapsed}\n\t\t\t\t\t\t\t\tscore={this.props.score}\n\t\t\t\t\t\t\t/>\n            </div>\n        );\n    }\n}\nexport default Game;\n","import ReactGA from 'react-ga';\n\nexport function isGAEnabled() {\n  return window.TRACKING_ID && window.TRACKING_ID !== '%REACT_APP_TRACKING_ID%'\n}\n\nexport function init() {\n  if (!isGAEnabled()) {\n    return false\n  }\n  ReactGA.initialize(window.TRACKING_ID);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nexport function logGuess(word) {\n  if (!isGAEnabled()) {\n    return false\n  }\n\n  ReactGA.event({\n    category: 'krizanka',\n    action: 'guess',\n    label: word,\n    dimension1: word\n  })\n}","import React from \"react\";\nimport { getCrossword } from './static.js';\nimport Game from \"./Game\"\nimport { logGuess } from \"./Analytics\"\n\nconst directions = {\n    Down: start => (i => [start[0], start[1] + i]),\n    Across: start => (i => [start[0] + i, start[1]])\n};\n\nfunction mapDirection(word) {\n    return directions[word.d](word.s);\n}\n\nfunction mapWord(word) {\n    const dir = mapDirection(word);\n    const letters = Array.from(word.w);\n    const items = letters.map((l,i) => [l, dir(i)]);\n    return items;\n}\n\nfunction calculatePad(crossword) {\n    let pad = Object();\n    for(const word of crossword.words) {\n        for(const [l, pos] of mapWord(word)) {\n            pad[pos] = {\n                l:l,\n                guess:null\n            };\n        }\n    }\n    return pad;\n}\n\nfunction range(x) {\n    let iter = [];\n    for(let i = 0; i < x; i++) {\n        iter.push(i);\n    }\n    return iter;\n}\n\nfunction inc(x) {\n    return (x||0) + 1;\n}\n\nconst schema_migrations = {\n    // each migration is keyed from older version and must produce either:\n    // - the state for the next version, or\n    // - null if migration is not possible\n    0: (state) => ({...state,\n                    schema: 1}),\n    1: (state) => ({...state,\n                    schema: 2,\n                    gameplay: {previous: 0, start: Date.now(), current: 0}}),\n    2: (state) => ({...state,\n                    schema: 3,\n                    gameplay: {...state.gameplay, finished: checkFinished(state.pad)},\n                    theme: \"theme-dark\"}),\n    3: (state) => ({...state,\n                    schema: 4,\n                    level: \"expert\"})\n};\n\nconst state_schema_version = 4;\n\nfunction validate_schema_migrations() {\n    for (const i of range(state_schema_version)) {\n        if (i in schema_migrations) {\n            continue;\n        }\n        alert(\"Missing schema_migrations[\"+i+\"], add it.\");\n        return false;\n    }\n    if (Object.keys(schema_migrations).length !== state_schema_version) {\n        alert(\"Weird schema_migrations, fix it.\");\n        return false;\n    }\n    return true;\n}\n\nfunction checkFinished(pad) {\n    return Object.values(pad).every(x => x.guess !== null);\n}\n\nfunction stateFromCrossword(level) {\n    const crossword = getCrossword(level);\n    const words = new Set(crossword.words.map((w)=>w.w));\n    return {\n        // Bump state_schema above when you muck with state.\n        // and implement the schema_migration, too\n        schema: state_schema_version,\n        history: [],\n        pad: calculatePad(crossword),\n        guesses: [],\n        score: { guess: 0, known: 0, miss: 0, repeat:0, words:words.size, unused:crossword.unused.length },\n        cols: range(crossword.size[0]),\n        rows: range(crossword.size[1]),\n        crossword: crossword,\n        letters: Array.from(crossword.letters).slice().sort(),\n        gameplay: {previous: 0, start: Date.now(), current: 0, finished: false},\n        level: level,\n        // see above for state schema changes\n    };\n}\n\nfunction state_key(level) { return 'game.state.' + level; }\n\nfunction restoreState(level) {\n    const store = window.localStorage;\n    if (!store) {\n        return undefined;\n    }\n    const ser = store.getItem(state_key(level));\n    if (!ser) {\n        return undefined;\n    }\n    if (!validate_schema_migrations()) {\n        return undefined;\n    }\n    let state = JSON.parse(ser);\n    while (state && state.schema < state_schema_version) {\n        const old_schema = state.schema;\n        state = schema_migrations[state.schema](state);\n        if (old_schema === state.schema) {\n            alert(\"Schema migration did not upgrade schema?\");\n            return undefined;\n        }\n    }\n    state = {...state,\n            gameplay: {\n                ...state.gameplay,\n                current: 0,\n                start: Date.now()}};\n    return state;\n}\n\nfunction saveState(state) {\n    const store = window.localStorage;\n    if (!store) {\n        return;\n    }\n    state = {...state,\n             gameplay: {\n                 previous: state.gameplay.previous + state.gameplay.current,\n                 current: 0,\n             }};\n    const ser = JSON.stringify(state);\n    store.setItem(state_key(state.level), ser);\n}\n\nclass GameLogic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.startTick(restoreState(this.props.level) ||\n                                    stateFromCrossword(this.props.level));\n    }\n\n    startTick(state) {\n        if (state._tick) {\n            clearInterval(state._tick);\n        }\n        return {\n            ...state,\n            _tick: setInterval(() => this.handleTick(), 1000),\n        };\n    }\n\n    handleTick() {\n        const state = this.state;\n        if (state.gameplay.finished) {\n            clearInterval(state._timer);\n            this.setState({...state, _timer: null});\n            return;\n        }\n        const elapsed = Math.floor((Date.now() - state.gameplay.start) / 1000);\n        if (elapsed !== state.gameplay.current) {\n            this.setState({\n                ...state,\n                gameplay: {\n                    ...state.gameplay,\n                    current: elapsed\n                }\n            });\n        }\n    }\n\n    handleReload(level) {\n        this.props.onLevel(level);\n        const state = this.startTick(stateFromCrossword(level));\n        saveState(state);\n        this.setState(state);\n    }\n\n\n    handleGuess(w) {\n        const is_w = x => x.w === w;\n        const fnot = f => ((...args) => !f(...args));\n        let history_entry;\n        let history = this.state.history;\n        let guesses = this.state.guesses;\n        let pad = this.state.pad;\n        const score = this.state.score;\n        let score_update = {};\n        logGuess(w)\n        const hits = this.state.crossword.words.filter(is_w);\n        if (hits.length > 0) {\n            pad = {...this.state.pad};\n            guesses = guesses.concat([w]);\n            history_entry = {w:w, k:history.length, guess:true};\n            score_update = {guess: inc(score.guess)};\n            for(const hit of hits) {\n                for(const [l, pos] of mapWord(hit)) {\n                    pad[pos] = {\n                        ...pad[pos],\n                        l:l,\n                        guess:guesses.length\n                    };\n                }\n            }\n        } else {\n            const known = this.state.crossword.unused.find(x=>x===w);\n            history_entry = {w:w, k:history.length, guess:false, known:!!known};\n            if (known) {\n                score_update = {known: inc(score.known)};\n            } else {\n                score_update = {miss: inc(score.miss)};\n            }\n        }\n\n        const repeat = history.find(is_w);\n        if (repeat) {\n            history = [\n                {\n                    ...repeat,\n                    repeat: 1 + (repeat.repeat || 0)}\n            ].concat(history.filter(fnot(is_w)));\n            score_update = {repeat: inc(score.repeat)};\n        } else {\n            history = [history_entry].concat(history);\n        }\n\n        const newState = {\n            ...this.state,\n            history: history,\n            pad: pad,\n            guesses: guesses,\n            score: {...score, ...score_update},\n            gameplay: {...this.state.gameplay, finished: checkFinished(pad)}\n        };\n        saveState(newState);\n        this.setState(newState);\n    }\n\n    handleHint(x,y) {\n        let history = this.state.history;\n        let pad = {...this.state.pad};\n        let cell = pad[[x,y]];\n        const w = (\"?\" + x + ',' + y);\n        history = [{x:x, y:y,\n                    k:history.length,\n                    hint:cell.l,\n                    w: w\n                   }].concat(history);\n        cell = {\n            ...cell,\n            hint: 1 + (cell.hint || 0)\n        };\n        if (cell.hint >= this.props.hintLimit) {\n            cell.guess = 0;\n        }\n        pad[[x,y]] = cell;\n        this.setState({\n            ...this.state,\n            history: history,\n            pad: pad,\n            gameplay: {...this.state.gameplay, finished: checkFinished(pad)}\n        });\n    }\n\n    render() {\n\n        const state = this.state;\n        return (\n              <Game\n                pad={state.pad}\n                cols={state.cols}\n                rows={state.rows}\n                hintLimit={this.props.hintLimit}\n                guesses={state.guesses}\n                score={state.score}\n                letters={state.letters}\n                history={state.history}\n                elapsed={state.gameplay.previous + state.gameplay.current}\n                onHint={(x,y) => this.handleHint(x,y)}\n                onGuess={(w) => this.handleGuess(w)}\n                onReload={(level) => this.handleReload(level)}\n                theme={this.props.theme}\n                onTheme={this.props.onTheme}\n                level={this.state.level}\n\t\t\t\t\t\t    />\n        );\n    }\n}\nexport default GameLogic;\n","import easy from \"./crosswords/crosswords.1000.json\";\nimport medium from \"./crosswords/crosswords.250.json\";\nimport advanced from \"./crosswords/crosswords.70.json\";\nimport expert from \"./crosswords/crosswords.1.json\";\n\n\nexport function getCrossword(level) {\n    if (window.location.hash === \"#debug\") {\n        console.log(\"Returning fake crossword\");\n        return {size: [3, 3],\n                words: [{d:\"Across\", w: \"ABC\", s: [0,0]},\n                        {d:\"Down\", w: \"CDE\", s: [2,0]}],\n                letters: \"ABCDE\",\n                unused:[\"BAC\", \"DEC\", \"ACE\"]};\n    }\n    const levels = {easy:easy, medium:medium, advanced:advanced, expert:expert};\n    const crosswords = levels[level];\n    const idx = Math.floor(Math.random() * crosswords.length);\n    return crosswords[idx];\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/main.scss';\nimport \"./styles/patternlock.css\";\nimport GameLogic from './GameLogic';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { init } from './Analytics'\n\ninit()\n\nfunction App() {\n    const levelKey = 'level';\n    // level: easy, medium, advanced, expert\n    const [level, setLevel] = useState(localStorage.getItem(levelKey) || 'easy');\n    React.useEffect(() => {\n        localStorage.setItem(levelKey, level);\n    }, [level]);\n\n    // theme: theme-dark, ...\n    const themeKey = 'theme';\n    const [theme, setTheme] = useState(localStorage.getItem(themeKey) || 'theme-dark');\n    React.useEffect(() => {\n        localStorage.setItem(themeKey, theme);\n    }, [theme]);\n\n\n    return (\n        <GameLogic level={level}\n                   onLevel={(l)=>setLevel(l)}\n                   theme={theme}\n                   onTheme={(t)=>{alert(\"set theme \"+t);setTheme(t)}}\n                   hintLimit={5} />\n        );\n}\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}