{"version":3,"sources":["static.js","PatternSelect.jsx","Actions.jsx","Svg.js","Guessbox.jsx","Pad.jsx","Game.jsx","GameLogic.jsx","serviceWorkerRegistration.js","index.js"],"names":["getCrossword","crosswords","Math","floor","random","length","PatternSelect","letters","onClear","setValue","onSubmit","moveEvent","svgns","PatternLock","useCallback","element","currentline","currenthandler","scrollKeys","svg","$","root","dots","find","lines","actives","pt","createSVGPoint","code","getPattern","map","i","attributes","value","join","a","enableScroll","stopTrack","remove","off","discoverDot","pattern","clear","document","getElementById","setAttribute","undefined","removeClass","empty","preventDefault","e","preventDefaultForScrollKeys","keyCode","window","removeEventListener","onmousewheel","onwheel","ontouchmove","onkeydown","updateLine","line","pos","getMousePos","x","y","matrixTransform","getScreenCTM","inverse","svgPosition","target","elementFromPoint","isAvailable","isUsed","push","getAttribute","x1","y1","x2","y2","createElementNS","createNewLine","marker","createNewMarker","append","on","beginTrack","clientX","originalEvent","touches","clientY","addEventListener","disableScroll","endEvent","type","one","end","useEffect","getCoordinates","index","alpha","PI","cos","sin","style","display","justifyContent","padding","width","height","background","borderRadius","className","id","viewBox","xmlns","l","Fragment","data","cx","cy","r","opacity","textAnchor","fill","fontSize","dy","toUpperCase","Actions","renderHistory","onShuffle","onReload","useState","renderList","setRenderList","onClick","d","title","lettersToState","used","Guessbox","propsLetters","onGuess","elapsed","setLetters","React","Array","from","val","JSON","stringify","class","array","slice","j","shuffle","Pad","pad","rows","cols","hintLimit","onHint","guesses","score","renderCell","p","k","opt","guess","hint","key","renderRow","words","known","unused","miss","repeat","Game","renderLi","w","this","props","history","filter","version","flexDirection","Component","directions","Down","start","Across","mapWord","word","dir","s","mapDirection","calculatePad","crossword","Object","range","iter","inc","schema_migrations","state","schema","gameplay","previous","Date","now","current","stateFromCrossword","Set","size","sort","STATE_KEY","restoreState","store","localStorage","ser","getItem","alert","keys","validate_schema_migrations","parse","saveState","setItem","GameLogic","setInterval","handleTick","setState","history_entry","is_w","score_update","hits","concat","hit","f","newState","cell","handleHint","handleGuess","handleReload","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","App","ReactDOM","render","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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AAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,C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IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,QAAS,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,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AK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,UAAW,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,SAAU,EAAK,MAAO,EAAK,CAAC,EAAG,KAAM,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,SAAU,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,OAAQ,EAAK,CAAC,EAAG,IAAK,CAAC,EAAK,OAAQ,EAAK,MAAO,EAAK,CAAC,EAAG,IAAK,CA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","file":"static/js/main.547780ad.chunk.js","sourcesContent":["export function getCrossword() {\n    const crosswords = [\n\n{\"size\": [9, 9], \"words\": [{\"d\": \"Across\", \"w\": \"DREŽNIŠKI\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"RIK\", \"s\": [0, 2]}, {\"d\": \"Across\", \"w\": \"KRN\", \"s\": [6, 2]}, {\"d\": \"Across\", \"w\": \"INI\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"ŠINK\", \"s\": [5, 3]}, {\"d\": \"Across\", \"w\": \"ŠIK\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"IŠKI\", \"s\": [0, 5]}, {\"d\": \"Across\", \"w\": \"EDIN\", \"s\": [5, 5]}, {\"d\": \"Across\", \"w\": \"KERI\", \"s\": [3, 6]}, {\"d\": \"Across\", \"w\": \"EKI\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"NED\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"IDE\", \"s\": [3, 8]}, {\"d\": \"Down\", \"w\": \"DRI\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"IDE\", \"s\": [0, 5]}, {\"d\": \"Down\", \"w\": \"RIN\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"NEKI\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"ŠIK\", \"s\": [3, 4]}, {\"d\": \"Down\", \"w\": \"RNK\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"ŠKER\", \"s\": [5, 3]}, {\"d\": \"Down\", \"w\": \"IŠKI\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"DIN\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"KRN\", \"s\": [7, 1]}, {\"d\": \"Down\", \"w\": \"ŠINK\", \"s\": [8, 0]}, {\"d\": \"Down\", \"w\": \"NED\", \"s\": [8, 5]}], \"letters\": \"DREŽNIŠKI\", \"unused\": [\"DEK\", \"DEŽ\", \"DIN\", \"DIR\", \"DRI\", \"DRN\", \"EKI\", \"IDE\", \"INI\", \"KDE\", \"KER\", \"KEŠ\", \"KRI\", \"KRN\", \"KRŠ\", \"NED\", \"NEK\", \"NIŠ\", \"RED\", \"REK\", \"REŠ\", \"REŽ\", \"RIK\", \"RIN\", \"RIŽ\", \"RNK\", \"ŠEN\", \"ŠER\", \"ŠIK\", \"ŠIN\", \"ŠIR\", \"ŽID\", \"ŽIR\", \"DENK\", \"DIEN\", \"DREK\", \"DREN\", \"DŽIN\", \"EDIN\", \"IŠKI\", \"KERI\", \"KRED\", \"KRIŽ\", \"NEKI\", \"NIŽE\", \"RŽEN\", \"ŠENK\", \"ŠERI\", \"ŠINK\", \"ŠKER\", \"DEŠKI\", \"EDINI\", \"KREDI\", \"KRŠEN\", \"NIŠKE\", \"NIŠKI\", \"REŠKI\", \"ŠIREN\", \"DEŽNIK\", \"KEIRIN\"]},\n{\"size\": [11, 11], \"words\": [{\"d\": \"Across\", \"w\": \"ORT\", \"s\": [2, 0]}, {\"d\": \"Across\", \"w\": \"PRE\", \"s\": [8, 0]}, {\"d\": \"Across\", \"w\": \"IMPERATOR\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"MIRTA\", \"s\": [0, 2]}, {\"d\": \"Across\", \"w\": \"ATEMI\", \"s\": [6, 2]}, {\"d\": \"Across\", \"w\": \"POTA\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"PREMOR\", \"s\": [5, 3]}, {\"d\": \"Across\", \"w\": \"REO\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"PORA\", \"s\": [7, 4]}, {\"d\": \"Across\", \"w\": \"OMA\", \"s\": [0, 5]}, {\"d\": \"Across\", \"w\": \"REM\", \"s\": [4, 5]}, {\"d\": \"Across\", \"w\": \"RET\", \"s\": [8, 5]}, {\"d\": \"Across\", \"w\": \"PAMET\", \"s\": [3, 6]}, {\"d\": \"Across\", \"w\": \"OTAR\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"REPAR\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"TEMA\", \"s\": [0, 8]}, {\"d\": \"Across\", \"w\": \"MARI\", \"s\": [5, 8]}, {\"d\": \"Across\", \"w\": \"OTRE\", \"s\": [2, 9]}, {\"d\": \"Across\", \"w\": \"OTEP\", \"s\": [7, 9]}, {\"d\": \"Across\", \"w\": \"PARI\", \"s\": [0, 10]}, {\"d\": \"Across\", \"w\": \"TORA\", \"s\": [5, 10]}, {\"d\": \"Down\", \"w\": \"IMPRO\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"OTIP\", \"s\": [0, 7]}, {\"d\": \"Down\", \"w\": \"MIO\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"MATE\", \"s\": [1, 5]}, {\"d\": \"Down\", \"w\": \"OPRT\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"AMOR\", \"s\": [2, 7]}, {\"d\": \"Down\", \"w\": \"RETAR\", \"s\": [3, 0]}, {\"d\": \"Down\", \"w\": \"PRATI\", \"s\": [3, 6]}, {\"d\": \"Down\", \"w\": \"TRA\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"ERA\", \"s\": [4, 4]}, {\"d\": \"Down\", \"w\": \"POEM\", \"s\": [5, 3]}, {\"d\": \"Down\", \"w\": \"MET\", \"s\": [5, 8]}, {\"d\": \"Down\", \"w\": \"OTAR\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"MERA\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"OTEP\", \"s\": [7, 1]}, {\"d\": \"Down\", \"w\": \"TEROR\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"PREMOR\", \"s\": [8, 0]}, {\"d\": \"Down\", \"w\": \"PITA\", \"s\": [8, 7]}, {\"d\": \"Down\", \"w\": \"MORETA\", \"s\": [9, 2]}, {\"d\": \"Down\", \"w\": \"EMIRAT\", \"s\": [10, 0]}, {\"d\": \"Down\", \"w\": \"REP\", \"s\": [10, 7]}], \"letters\": \"IMPERATOR\", \"unused},\n{\"size\": [11, 11], \"words\": [{\"d\": \"Across\", \"w\": \"KALAN\", \"s\": [6, 0]}, {\"d\": \"Across\", \"w\": \"KANCELAR\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"ARKAN\", \"s\": [0, 2]}, {\"d\": \"Across\", \"w\": \"LEKAR\", \"s\": [6, 2]}, {\"d\": \"Across\", \"w\": \"REAL\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"RANA\", \"s\": [5, 3]}, {\"d\": \"Across\", \"w\": \"ARA\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"ARAK\", \"s\": [7, 4]}, {\"d\": \"Across\", \"w\": \"NAA\", \"s\": [0, 5]}, {\"d\": \"Across\", \"w\": \"ACA\", \"s\": [4, 5]}, {\"d\": \"Across\", \"w\": \"ALA\", \"s\": [8, 5]}, {\"d\": \"Across\", \"w\": \"KLANA\", \"s\": [3, 6]}, {\"d\": \"Across\", \"w\": \"KARA\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"KALA\", \"s\": [5, 7]}, {\"d\": \"Across\", \"w\": \"AKEL\", \"s\": [0, 8]}, {\"d\": \"Across\", \"w\": \"LANCA\", \"s\": [6, 8]}, {\"d\": \"Across\", \"w\": \"REK\", \"s\": [0, 9]}, {\"d\": \"Across\", \"w\": \"ANE\", \"s\": [4, 9]}, {\"d\": \"Across\", \"w\": \"KAL\", \"s\": [8, 9]}, {\"d\": \"Across\", \"w\": \"ELAN\", \"s\": [0, 10]}, {\"d\": \"Across\", \"w\": \"CAL\", \"s\": [7, 10]}, {\"d\": \"Down\", \"w\": \"KAR\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"KARE\", \"s\": [0, 7]}, {\"d\": \"Down\", \"w\": \"ARENA\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"AKEL\", \"s\": [1, 7]}, {\"d\": \"Down\", \"w\": \"ENKA\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"REKA\", \"s\": [2, 7]}, {\"d\": \"Down\", \"w\": \"CALA\", \"s\": [3, 1]}, {\"d\": \"Down\", \"w\": \"KAL\", \"s\": [3, 6]}, {\"d\": \"Down\", \"w\": \"CEN\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"RAL\", \"s\": [4, 4]}, {\"d\": \"Down\", \"w\": \"RACAK\", \"s\": [5, 3]}, {\"d\": \"Down\", \"w\": \"KALA\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"ANALE\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"ARENA\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"ALA\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"KARA\", \"s\": [8, 2]}, {\"d\": \"Down\", \"w\": \"ANKA\", \"s\": [8, 7]}, {\"d\": \"Down\", \"w\": \"ALA\", \"s\": [9, 0]}, {\"d\": \"Down\", \"w\": \"ALK\", \"s\": [9, 4]}, {\"d\": \"Down\", \"w\": \"CAL\", \"s\": [9, 8]}, {\"d\": \"Down\", \"w\": \"RAKA\", \"s\": [10, 2]}, {\"d\": \"Down\", \"w\": \"RAL\", \"s\": [10, 7]}], \"letters\": \"KANCELAR\", \"unused},\n{\"size\": [9, 9], \"words\": [{\"d\": \"Across\", \"w\": \"TARI\", \"s\": [4, 0]}, {\"d\": \"Across\", \"w\": \"RAZSUTI\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"SITAR\", \"s\": [4, 2]}, {\"d\": \"Across\", \"w\": \"SARI\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"ART\", \"s\": [6, 3]}, {\"d\": \"Across\", \"w\": \"RAZ\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"RAST\", \"s\": [0, 5]}, {\"d\": \"Across\", \"w\": \"IRTA\", \"s\": [0, 6]}, {\"d\": \"Across\", \"w\": \"RISA\", \"s\": [5, 6]}, {\"d\": \"Across\", \"w\": \"STI\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"SATIR\", \"s\": [4, 7]}, {\"d\": \"Across\", \"w\": \"SAT\", \"s\": [5, 8]}, {\"d\": \"Down\", \"w\": \"RIS\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"RIS\", \"s\": [0, 5]}, {\"d\": \"Down\", \"w\": \"ART\", \"s\": [1, 5]}, {\"d\": \"Down\", \"w\": \"AZUR\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"STI\", \"s\": [2, 5]}, {\"d\": \"Down\", \"w\": \"IRTA\", \"s\": [3, 3]}, {\"d\": \"Down\", \"w\": \"TUS\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"ATI\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"RAS\", \"s\": [5, 6]}, {\"d\": \"Down\", \"w\": \"RITA\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"RITA\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"ART\", \"s\": [7, 2]}, {\"d\": \"Down\", \"w\": \"SIT\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"SRT\", \"s\": [8, 1]}, {\"d\": \"Down\", \"w\": \"ZAR\", \"s\": [8, 5]}], \"letters\": \"RAZSUTI\", \"unused\": [\"AIS\", \"ART\", \"ATI\", \"AUT\", \"IRS\", \"IRT\", \"RAS\", \"RAZ\", \"RIS\", \"RIT\", \"RUS\", \"RUT\", \"SAT\", \"SIA\", \"SIR\", \"SIT\", \"SRT\", \"STI\", \"TIR\", \"TRA\", \"TRI\", \"TRS\", \"TRZ\", \"TUR\", \"TUS\", \"URA\", \"UTA\", \"ZAR\", \"ZAS\", \"AZUR\", \"IRTA\", \"RAST\", \"RAUS\", \"RIAS\", \"RISA\", \"RISU\", \"RITA\", \"RIZA\", \"RUSA\", \"RUTA\", \"RUTI\", \"SARI\", \"SITA\", \"STAR\", \"SURA\", \"TARI\", \"TIRS\", \"TISA\", \"TRAS\", \"TRIS\", \"TURA\", \"USTA\", \"IZUST\", \"RASTI\", \"SATIR\", \"SITAR\", \"SUITA\", \"SUTRA\", \"TRIAS\", \"ZARIS\", \"ZASUTI\", \"ZRASTI\"]},\n{\"size\": [7, 6], \"words\": [{\"d\": \"Across\", \"w\": \"NOBELOV\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"ONE\", \"s\": [0, 2]}, {\"d\": \"Across\", \"w\": \"VEL\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"LEB\", \"s\": [4, 3]}, {\"d\": \"Across\", \"w\": \"VELO\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"LEV\", \"s\": [0, 5]}, {\"d\": \"Down\", \"w\": \"NOV\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"ONE\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"OBEL\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"LEV\", \"s\": [4, 3]}, {\"d\": \"Down\", \"w\": \"NOBEL\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"BOL\", \"s\": [6, 3]}], \"letters\": \"NOBELOV\", \"unused\": [\"BEL\", \"BEV\", \"BOL\", \"BON\", \"EON\", \"EVO\", \"LEB\", \"LEN\", \"LEV\", \"LOB\", \"LON\", \"LOV\", \"NEO\", \"NOV\", \"ONE\", \"ONO\", \"VEL\", \"VEN\", \"VOL\", \"VON\", \"LENO\", \"LEON\", \"NEBO\", \"OBEL\", \"OBLO\", \"OVBE\", \"OVEN\", \"VELO\", \"VENO\", \"VOLE\", \"BONOV\", \"NOBEL\"]},\n{\"size\": [11, 11], \"words\": [{\"d\": \"Across\", \"w\": \"OKOV\", \"s\": [2, 0]}, {\"d\": \"Across\", \"w\": \"OSAT\", \"s\": [7, 0]}, {\"d\": \"Across\", \"w\": \"JOKAVOST\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"VOJAK\", \"s\": [1, 2]}, {\"d\": \"Across\", \"w\": \"KOTA\", \"s\": [7, 2]}, {\"d\": \"Across\", \"w\": \"KAV\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"JAKOV\", \"s\": [6, 3]}, {\"d\": \"Across\", \"w\": \"AVTO\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"OST\", \"s\": [0, 5]}, {\"d\": \"Across\", \"w\": \"SOKO\", \"s\": [4, 5]}, {\"d\": \"Across\", \"w\": \"OTOKA\", \"s\": [2, 6]}, {\"d\": \"Across\", \"w\": \"KOJ\", \"s\": [8, 6]}, {\"d\": \"Across\", \"w\": \"SKAT\", \"s\": [1, 7]}, {\"d\": \"Across\", \"w\": \"VSOTA\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"TOKAJ\", \"s\": [1, 8]}, {\"d\": \"Across\", \"w\": \"VSAK\", \"s\": [7, 8]}, {\"d\": \"Across\", \"w\": \"JAVO\", \"s\": [0, 9]}, {\"d\": \"Across\", \"w\": \"AJO\", \"s\": [5, 9]}, {\"d\": \"Across\", \"w\": \"VOK\", \"s\": [3, 10]}, {\"d\": \"Across\", \"w\": \"JAVK\", \"s\": [7, 10]}, {\"d\": \"Down\", \"w\": \"KAOS\", \"s\": [0, 3]}, {\"d\": \"Down\", \"w\": \"OVA\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"STAJ\", \"s\": [1, 7]}, {\"d\": \"Down\", \"w\": \"OKOV\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"TOKOV\", \"s\": [2, 5]}, {\"d\": \"Down\", \"w\": \"KAJ\", \"s\": [3, 0]}, {\"d\": \"Down\", \"w\": \"TAKOV\", \"s\": [3, 6]}, {\"d\": \"Down\", \"w\": \"OVA\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"VSOTA\", \"s\": [4, 4]}, {\"d\": \"Down\", \"w\": \"VOK\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"TOK\", \"s\": [5, 4]}, {\"d\": \"Down\", \"w\": \"JAK\", \"s\": [5, 8]}, {\"d\": \"Down\", \"w\": \"JOKAV\", \"s\": [6, 3]}, {\"d\": \"Down\", \"w\": \"OTKA\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"SVOJ\", \"s\": [7, 7]}, {\"d\": \"Down\", \"w\": \"OKO\", \"s\": [8, 2]}, {\"d\": \"Down\", \"w\": \"KOS\", \"s\": [8, 6]}, {\"d\": \"Down\", \"w\": \"AVTO\", \"s\": [9, 0]}, {\"d\": \"Down\", \"w\": \"KOTA\", \"s\": [9, 5]}, {\"d\": \"Down\", \"w\": \"AVT\", \"s\": [10, 2]}, {\"d\": \"Down\", \"w\": \"JAK\", \"s\": [10, 6]}], \"letters\": \"JOKAVOST\", \"unused},\n{\"size\": [8, 8], \"words\": [{\"d\": \"Across\", \"w\": \"KEKO\", \"s\": [4, 0]}, {\"d\": \"Across\", \"w\": \"OKENSKI\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"SEN\", \"s\": [0, 2]}, {\"d\": \"Across\", \"w\": \"EON\", \"s\": [4, 2]}, {\"d\": \"Across\", \"w\": \"EKO\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"KOK\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"INO\", \"s\": [1, 5]}, {\"d\": \"Across\", \"w\": \"EKI\", \"s\": [5, 5]}, {\"d\": \"Across\", \"w\": \"NEK\", \"s\": [1, 6]}, {\"d\": \"Across\", \"w\": \"KES\", \"s\": [5, 6]}, {\"d\": \"Across\", \"w\": \"SOK\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"KOS\", \"s\": [4, 7]}, {\"d\": \"Down\", \"w\": \"OSEK\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"KEK\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"INO\", \"s\": [1, 5]}, {\"d\": \"Down\", \"w\": \"SENO\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"NEK\", \"s\": [2, 5]}, {\"d\": \"Down\", \"w\": \"KOK\", \"s\": [3, 4]}, {\"d\": \"Down\", \"w\": \"KSENO\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"EKO\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"KEKO\", \"s\": [5, 4]}, {\"d\": \"Down\", \"w\": \"KINO\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"KES\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"EIS\", \"s\": [7, 4]}], \"letters\": \"OKENSKI\", \"unused\": [\"EIS\", \"EKI\", \"EKO\", \"EKS\", \"EON\", \"IKS\", \"INO\", \"ION\", \"KEK\", \"KES\", \"KIS\", \"KOK\", \"KON\", \"KOS\", \"NEK\", \"NEO\", \"NOS\", \"ONE\", \"ONI\", \"SEK\", \"SEN\", \"SIK\", \"SIN\", \"SOK\", \"SON\", \"KEKO\", \"KEKS\", \"KIKO\", \"KIKS\", \"KINO\", \"KOKS\", \"KONS\", \"NEKI\", \"OSEK\", \"OSNE\", \"SENO\", \"SINE\", \"SION\", \"SKIN\", \"SKOK\", \"INOKS\", \"KESON\", \"KIOSK\", \"KOSIN\", \"KSENO\", \"NOSEK\", \"ONIKS\", \"SENIK\", \"SINEK\", \"SINKO\"]},\n{\"size\": [11, 11], \"words\": [{\"d\": \"Across\", \"w\": \"OSA\", \"s\": [2, 0]}, {\"d\": \"Across\", \"w\": \"STI\", \"s\": [6, 0]}, {\"d\": \"Across\", \"w\": \"POSEJATI\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"PIJO\", \"s\": [1, 2]}, {\"d\": \"Across\", \"w\": \"OSIPA\", \"s\": [6, 2]}, {\"d\": \"Across\", \"w\": \"TIPA\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"TJA\", \"s\": [5, 3]}, {\"d\": \"Across\", \"w\": \"OJA\", \"s\": [0, 4]}, {\"d\": \"Across\", \"w\": \"JOA\", \"s\": [4, 4]}, {\"d\": \"Across\", \"w\": \"STO\", \"s\": [8, 4]}, {\"d\": \"Across\", \"w\": \"SEP\", \"s\": [3, 5]}, {\"d\": \"Across\", \"w\": \"STOJ\", \"s\": [7, 5]}, {\"d\": \"Across\", \"w\": \"POET\", \"s\": [1, 6]}, {\"d\": \"Across\", \"w\": \"ETO\", \"s\": [6, 6]}, {\"d\": \"Across\", \"w\": \"POST\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"STEPA\", \"s\": [5, 7]}, {\"d\": \"Across\", \"w\": \"ATI\", \"s\": [0, 8]}, {\"d\": \"Across\", \"w\": \"STOPA\", \"s\": [4, 8]}, {\"d\": \"Across\", \"w\": \"PATO\", \"s\": [2, 9]}, {\"d\": \"Across\", \"w\": \"JAT\", \"s\": [8, 9]}, {\"d\": \"Across\", \"w\": \"OPA\", \"s\": [0, 10]}, {\"d\": \"Across\", \"w\": \"OPAT\", \"s\": [4, 10]}, {\"d\": \"Down\", \"w\": \"TOP\", \"s\": [0, 3]}, {\"d\": \"Down\", \"w\": \"PATO\", \"s\": [0, 7]}, {\"d\": \"Down\", \"w\": \"OPIJ\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"POT\", \"s\": [1, 6]}, {\"d\": \"Down\", \"w\": \"OSIPA\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"OSIPA\", \"s\": [2, 6]}, {\"d\": \"Down\", \"w\": \"SEJA\", \"s\": [3, 0]}, {\"d\": \"Down\", \"w\": \"SET\", \"s\": [3, 5]}, {\"d\": \"Down\", \"w\": \"AJO\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"JET\", \"s\": [4, 4]}, {\"d\": \"Down\", \"w\": \"STO\", \"s\": [4, 8]}, {\"d\": \"Down\", \"w\": \"TOP\", \"s\": [5, 3]}, {\"d\": \"Down\", \"w\": \"STOP\", \"s\": [5, 7]}, {\"d\": \"Down\", \"w\": \"STOJA\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"ETO\", \"s\": [6, 6]}, {\"d\": \"Down\", \"w\": \"TISA\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"STEP\", \"s\": [7, 5]}, {\"d\": \"Down\", \"w\": \"STOPAJ\", \"s\": [8, 4]}, {\"d\": \"Down\", \"w\": \"PATO\", \"s\": [9, 2]}, {\"d\": \"Down\", \"w\": \"OJA\", \"s\": [10, 0]}, {\"d\": \"Down\", \"w\": \"OJE\", \"s\": [10, 4]}, {\"d\": \"Down\", \"w\": \"STI\", \"s\": [10, 8]}], \"letters\": \"POSEJATI\", \"unused},\n{\"size\": [9, 9], \"words\": [{\"d\": \"Across\", \"w\": \"BIZELJSKI\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"IBIS\", \"s\": [0, 2]}, {\"d\": \"Across\", \"w\": \"EIS\", \"s\": [5, 2]}, {\"d\": \"Across\", \"w\": \"LIK\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"KIJ\", \"s\": [6, 3]}, {\"d\": \"Across\", \"w\": \"IKS\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"SEK\", \"s\": [4, 5]}, {\"d\": \"Across\", \"w\": \"LESI\", \"s\": [0, 6]}, {\"d\": \"Across\", \"w\": \"LIKI\", \"s\": [5, 6]}, {\"d\": \"Across\", \"w\": \"EKI\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"JEK\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"BILJE\", \"s\": [0, 8]}, {\"d\": \"Down\", \"w\": \"BIL\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"LEB\", \"s\": [0, 6]}, {\"d\": \"Down\", \"w\": \"IBIS\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"EKI\", \"s\": [1, 6]}, {\"d\": \"Down\", \"w\": \"ZIK\", \"s\": [2, 1]}, {\"d\": \"Down\", \"w\": \"SIL\", \"s\": [2, 6]}, {\"d\": \"Down\", \"w\": \"BES\", \"s\": [3, 0]}, {\"d\": \"Down\", \"w\": \"IKS\", \"s\": [4, 3]}, {\"d\": \"Down\", \"w\": \"KJE\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"SEL\", \"s\": [5, 4]}, {\"d\": \"Down\", \"w\": \"SIK\", \"s\": [6, 1]}, {\"d\": \"Down\", \"w\": \"KIJ\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"EKSIL\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"KEJ\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"ZIK\", \"s\": [8, 5]}], \"letters\": \"BIZELJSKI\", \"unused\": [\"BEK\", \"BEL\", \"BES\", \"BEZ\", \"BIK\", \"BIL\", \"BIS\", \"EIS\", \"EKI\", \"EKS\", \"IBE\", \"IKS\", \"JEK\", \"JEL\", \"JEZ\", \"KEJ\", \"KES\", \"KIJ\", \"KIS\", \"KJE\", \"KLI\", \"LEB\", \"LEJ\", \"LEK\", \"LES\", \"LIK\", \"SEK\", \"SEL\", \"SIJ\", \"SIK\", \"SIL\", \"ZEK\", \"ZEL\", \"ZIB\", \"ZIK\", \"IBIS\", \"JELI\", \"LESI\", \"LESK\", \"LIKI\", \"LISE\", \"SLEJ\", \"BILJE\", \"BLESK\", \"BLISK\", \"EKSIL\", \"IZSEK\", \"JEZIK\", \"KISEL\", \"LESKI\", \"ZIBEL\", \"BELSKI\", \"BLEJSKI\", \"ZILJSKI\", \"ZBILJSKI\"]},\n{\"size\": [11, 11], \"words\": [{\"d\": \"Across\", \"w\": \"STI\", \"s\": [3, 0]}, {\"d\": \"Across\", \"w\": \"LAIK\", \"s\": [7, 0]}, {\"d\": \"Across\", \"w\": \"TAMILSKI\", \"s\": [0, 1]}, {\"d\": \"Across\", \"w\": \"ITAK\", \"s\": [2, 2]}, {\"d\": \"Across\", \"w\": \"KLAS\", \"s\": [7, 2]}, {\"d\": \"Across\", \"w\": \"MITA\", \"s\": [0, 3]}, {\"d\": \"Across\", \"w\": \"ATI\", \"s\": [5, 3]}, {\"d\": \"Across\", \"w\": \"AKI\", \"s\": [0, 4]}, {\"d\": \"Across\", \"w\": \"ITI\", \"s\": [4, 4]}, {\"d\": \"Across\", \"w\": \"AKT\", \"s\": [8, 4]}, {\"d\": \"Across\", \"w\": \"SLIKATI\", \"s\": [3, 5]}, {\"d\": \"Across\", \"w\": \"SLA\", \"s\": [2, 6]}, {\"d\": \"Across\", \"w\": \"LISA\", \"s\": [7, 6]}, {\"d\": \"Across\", \"w\": \"ILKA\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"MAK\", \"s\": [5, 7]}, {\"d\": \"Across\", \"w\": \"SIA\", \"s\": [0, 8]}, {\"d\": \"Across\", \"w\": \"TAK\", \"s\": [4, 8]}, {\"d\": \"Across\", \"w\": \"SAT\", \"s\": [8, 8]}, {\"d\": \"Across\", \"w\": \"SILIKAT\", \"s\": [3, 9]}, {\"d\": \"Across\", \"w\": \"KAL\", \"s\": [0, 10]}, {\"d\": \"Across\", \"w\": \"KIS\", \"s\": [4, 10]}, {\"d\": \"Across\", \"w\": \"MIK\", \"s\": [8, 10]}, {\"d\": \"Down\", \"w\": \"TIMA\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"MIS\", \"s\": [0, 6]}, {\"d\": \"Down\", \"w\": \"IKT\", \"s\": [1, 3]}, {\"d\": \"Down\", \"w\": \"LISA\", \"s\": [1, 7]}, {\"d\": \"Down\", \"w\": \"MITI\", \"s\": [2, 1]}, {\"d\": \"Down\", \"w\": \"SKA\", \"s\": [2, 6]}, {\"d\": \"Down\", \"w\": \"SITA\", \"s\": [3, 0]}, {\"d\": \"Down\", \"w\": \"SLA\", \"s\": [3, 5]}, {\"d\": \"Down\", \"w\": \"TLA\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"ILA\", \"s\": [4, 4]}, {\"d\": \"Down\", \"w\": \"TIK\", \"s\": [4, 8]}, {\"d\": \"Down\", \"w\": \"ISKATI\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"MALI\", \"s\": [5, 7]}, {\"d\": \"Down\", \"w\": \"TIK\", \"s\": [6, 3]}, {\"d\": \"Down\", \"w\": \"AKIS\", \"s\": [6, 7]}, {\"d\": \"Down\", \"w\": \"LIKI\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"ALK\", \"s\": [7, 5]}, {\"d\": \"Down\", \"w\": \"ATI\", \"s\": [8, 4]}, {\"d\": \"Down\", \"w\": \"SAM\", \"s\": [8, 8]}, {\"d\": \"Down\", \"w\": \"ILA\", \"s\": [9, 0]}, {\"d\": \"Down\", \"w\": \"KIS\", \"s\": [9, 4]}, {\"d\": \"Down\", \"w\": \"ATI\", \"s\": [9, 8]}, {\"d\": \"Down\", \"w\": \"SAT\", \"s\": [10, 2]}, {\"d\": \"Down\", \"w\": \"AKT\", \"s\": [10, 6]}], \"letters\": \"TAMILSKI\", \"unused\": [\"AIS\", \"AKI\", \"AKT\", \"ALI\", \"ALK\", \"ALT\", \"AMI\", \"ATI\", \"IKS\", \"IKT\", \"ILA\", \"ITI\", \"KAL\", \"KAM\", \"KAS\", \"KIM\", \"KIS\", \"KIT\", \"KLI\", \"KTM\", \"LAK\", \"LAS\", \"LAT\", \"LIK\", \"LIM\", \"LIT\", \"MAK\", \"MAT\", \"MIK\", \"MIL\", \"MIS\", \"MIT\", \"SAK\", \"SAM\", \"SAT\", \"SIA\", \"SIK\", \"SIL\", \"SIM\", \"SIT\", \"SKA\", \"SLA\", \"STI\", \"TAK\", \"TAL\", \"TAM\", \"TIK\", \"TIL\", \"TIM\", \"TLA\", \"AKIS\", \"ILKA\", \"ISTI\", \"ITAK\", \"KALI\", \"KASI\", \"KILA\", \"KILT\", \"KITA\", \"KLAS\", \"LAIK\", \"LAKI\", \"LAKS\", \"LAST\", \"LIKI\", \"LISA\", \"LIST\", \"LITI\", \"MAKI\", \"MALI\", \"MAST\", \"MATI\", \"MIKA\", \"MIKS\", \"MITA\", \"MITI\", \"SIAL\", \"SIKA\", \"SILA\", \"SIMA\", \"SITA\", \"SKAT\", \"SLAK\", \"STAL\", \"STIK\", \"STIL\", \"TALI\", \"TAMI\", \"TIKA\", \"TIKI\", \"TILA\", \"TIMA\", \"TISA\", \"TISK\", \"TLAK\", \"ISLAM\", \"KISAL\", \"KLATI\", \"KLIMA\", \"KLITI\", \"LIMIT\", \"LISKA\", \"LISTA\", \"MAKSI\", \"MALIK\", \"MILKA\", \"SILAK\", \"SLIKA\", \"STIKA\", \"TAKSI\", \"TIKAL\", \"TISKA\", \"ISKATI\", \"KALITI\", \"KIMATI\", \"KLIMAT\", \"LIKATI\", \"LIMITA\", \"MISTIK\", \"MITIKA\", \"MITSKI\", \"MISTIKA\", \"SILIKAT\", \"SKALITI\", \"SLIKATI\", \"ALKIMIST\"]},\n/// insert marker ///\n    ];\n    const idx = Math.floor(Math.random() * crosswords.length);\n    return crosswords[idx];\n}\n\n","import React, { useEffect, useCallback } from \"react\"\nimport $ from \"jquery\"\n\nconst PatternSelect = ({letters, onClear, setValue, onSubmit}) => {\n    const moveEvent = 'touchstart mousedown touchmove mousemove'\n    const svgns = 'http://www.w3.org/2000/svg'\n  \n    const PatternLock = useCallback((element) => {\n        const scrollKeys = {\n            37: true, // left\n            38: true, // up\n            39: true, // right\n            40: true, // down\n            32: true, // spacebar\n            33: true, // pageup\n            34: true, // pagedown\n            35: true, // end\n            36: true, // home\n        };\n        \n        let svg = $(element)\n        let root = svg[0]\n        let dots = svg.find('.lock-dots text')\n        let lines = svg.find('.lock-lines')\n        let actives = svg.find('.lock-actives')\n        const pt = root.createSVGPoint();\n        let code = []\n        let currentline\n        let currenthandler\n\n        svg.on('touchstart mousedown', (e) => {\n            clear()\n            e.preventDefault()\n            disableScroll()\n            discoverDot(e)\n            svg.on(moveEvent, discoverDot)\n            let endEvent = e.type === 'touchstart' ? 'touchend' : 'mouseup';\n            $(document).one(endEvent, (e) => {\n                end()\n            })\n        })\n\n        function getPattern() {\n            const pattern = code.map((i) => i.attributes.value.value).join('')\n            return pattern\n        }\n\n        async function end() {\n            enableScroll()\n            stopTrack(currentline)\n            currentline && currentline.remove()\n            svg.off(moveEvent, discoverDot)\n            const pattern = getPattern()\n            await setValue(pattern)\n            await onSubmit(pattern)\n            await clear();\n            for (let i = 0; i < letters.length; i++){\n                document.getElementById(`letter_${i}`).setAttribute(\"fill\", \"var(--c-tertiary)\")\n            }\n            \n            // console.log(pattern)\n        }\n\n        function clear() {\n            code = []\n            currentline = undefined\n            currenthandler = undefined\n            svg.removeClass('success error')\n            lines.empty()\n            actives.empty()\n            onClear()\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n\n        }\n\n        function preventDefaultForScrollKeys(e) {\n            if (scrollKeys[e.keyCode]) {\n                preventDefault(e);\n                return false;\n            }\n        }\n\n        function disableScroll() {\n            if (window.addEventListener) // older FF\n                window.addEventListener('DOMMouseScroll', preventDefault, false);\n            window.onwheel = preventDefault; // modern standard\n            window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE\n            window.ontouchmove = preventDefault; // mobile\n            document.onkeydown = preventDefaultForScrollKeys;\n        }\n\n        function enableScroll() {\n            if (window.removeEventListener)\n                window.removeEventListener('DOMMouseScroll', preventDefault, false);\n            window.onmousewheel = document.onmousewheel = null;\n            window.onwheel = null;\n            window.ontouchmove = null;\n            document.onkeydown = null;\n        }\n\n        function isUsed(target) {\n            for (let i = 0; i < code.length; i++) {\n                if (code[i] === target) {\n                    return true\n                }\n            }\n            return false\n        }\n\n        function isAvailable(target) {\n            for (let i = 0; i < dots.length; i++) {\n                if (dots[i] === target) {\n                    return true\n                }\n            }\n            return false\n        }\n\n        function updateLine(line) {\n            return function(e) {\n                e.preventDefault()\n                if (currentline !== line) return\n                let pos = svgPosition(e.target, e)\n                line.setAttribute('x2', pos.x)\n                line.setAttribute('y2', pos.y)\n                return false\n            }\n        }\n\n        function discoverDot(e, target) {\n            if (!target) {\n                let {x, y} = getMousePos(e)\n                target = document.elementFromPoint(x, y);\n            }\n            if (isAvailable(target) && !isUsed(target)) {\n                stopTrack(currentline, target)\n                currentline = beginTrack(target)\n            }\n        }\n\n        function stopTrack(line, target) {\n            if (line === undefined) return\n            if (currenthandler) {\n                svg.off('touchmove mousemove', currenthandler)\n            }\n            if (target === undefined) return\n            let x = target.getAttribute('cx') || target.getAttribute(\"x\")\n            let y = target.getAttribute('cy') || target.getAttribute(\"y\")\n            line.setAttribute('x2', x)\n            line.setAttribute('y2', y)\n        }\n\n        function beginTrack(target) { \n            code.push(target)\n            setValue(code?.map((i) => i.attributes.value.value).join(''))\n            let x = target.getAttribute('cx') || target.getAttribute(\"x\")\n            let y = target.getAttribute('cy') || target.getAttribute(\"y\")\n            const line = createNewLine(x, y)\n            const marker = createNewMarker(x, y)\n            document.getElementById(target.getAttribute(\"id\")).setAttribute(\"fill\", \"var(--c-primary)\")\n            actives.append(marker)\n            currenthandler = updateLine(line)\n            svg.on('touchmove mousemove', currenthandler)\n            lines.append(line);\n            return line\n        }\n\n        function createNewMarker(x, y) {\n            const marker = document.createElementNS(svgns, \"circle\")\n            marker.setAttribute('cx', x)\n            marker.setAttribute('cy', y)\n            marker.setAttribute('r', 10)\n            \n            return marker\n        }\n\n        function createNewLine(x1, y1, x2, y2) {\n            const line = document.createElementNS(svgns, \"line\")\n            line.setAttribute('x1', x1)\n            line.setAttribute('y1', y1)\n            if (x2 === undefined || y2 === undefined) {\n                line.setAttribute('x2', x1)\n                line.setAttribute('y2', y1)\n            } else {\n                line.setAttribute('x2', x2)\n                line.setAttribute('y2', y2)\n            }\n            return line\n        }\n\n        function getMousePos(e) {\n            return {\n                x: e.clientX || e?.originalEvent?.touches[0]?.clientX || 0,\n                y :e.clientY || e?.originalEvent?.touches[0]?.clientY || 0\n            }\n        }\n\n        function svgPosition(element, e) {\n            let {x, y} = getMousePos(e)\n            pt.x = x; pt.y = y;\n            return pt.matrixTransform(element.getScreenCTM().inverse());\n        }\n\n    \n    }, [onClear, onSubmit, letters.length, setValue])\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => PatternLock(\"#lock\") , [])\n\n    const getCoordinates = (index) => {\n        const alpha = 2 * Math.PI * index / letters.length \n        const x =  50 + 39 * Math.cos(alpha)\n        const y = 50 + 39 * Math.sin(alpha)\n        return {x: x, y: y}\n    }\n\n    return (\n        \n    <div style={{display: \"flex\", justifyContent:\"center\", padding: 20}}>\n        <svg style={{width: 225, height: 225, background: \"var(--c-secondary)\", borderRadius: 112.5}} className=\"patternlock\" id=\"lock\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g className=\"lock-actives\"></g>\n                <g className=\"lock-lines\"></g>\n                <g className=\"lock-dots\">\n                    {letters && letters.length && letters.map((l,i) => {\n                        return(\n                            <React.Fragment key={i}>\n                                <circle index={i} data={l.l} cx={getCoordinates(i).x} cy={getCoordinates(i).y} r={6.5} opacity=\"0\" />\n                                <text className=\"svgtxt\" value={l.l} id={`letter_${i}`} textAnchor=\"middle\" x={getCoordinates(i).x} y={getCoordinates(i).y} fill=\"var(--c-tertiary)\" fontSize=\"0.8em\"  dy=\".3em\">{l.l.toUpperCase()}</text>\n                            </React.Fragment>\n                        )}\n                    )}\n                    \n                </g>\n            </svg>\n        </div>\n    )\n\n}\nexport default PatternSelect\n","import React, {useState} from \"react\";\nimport { iconList, iconShuffle } from './Svg';\n\nconst Actions = ({renderHistory, onShuffle, onReload}) => {\n    const [renderList, setRenderList] = useState(false);\n\n\n\n    function handleRenderList() {\n\t\t    setRenderList(!renderList);\n\t  }\n\n\n    return(\n        <>\n          <div style={{width: \"100vw\"}} className=\"c-actions\">\n\t\t\t\t    <button onClick={ (e) => handleRenderList() }>\n\t\t\t\t\t    { iconList() }\n\t\t\t\t    </button>\n            <button onClick={(e) => onReload()} title=\"Reload\">\n              Reload\n            </button>\n\t\t\t\t    <button onClick={(e) => onShuffle()} title=\"Shuffle\">\n\t\t\t\t\t    { iconShuffle() }\n\t\t\t\t    </button>\n          </div>\n\t\t\t    { renderList && renderHistory() }\n        </>\n    );\n};\nexport default Actions;\n","export function iconKey() {\n\treturn (\n\t\t<svg viewBox=\"0 0 44 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M0 22C0 2.2 2.2 0 22 0C41.8 0 44 2.2 44 22C44 41.8 41.8 44 22 44C2.2 44 0 41.8 0 22Z\" />\n\t\t</svg>\n\t);\n}\n\nexport function iconBlack() {\n\t  return (\n\t\t        <svg viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t      <path d=\"M0 8L0 56L8 64L56 64L64 56L64 8L56 0L8 0Z\" />\n\t\t        </svg>\n\t  );\n}\n\nexport function iconList () {\n\treturn (\n\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M3 13H5V11H3V13ZM3 17H5V15H3V17ZM3 9H5V7H3V9ZM7 13H21V11H7V13ZM7 17H21V15H7V17ZM7 7V9H21V7H7Z\" />\n\t\t</svg>\n\t);\n};\n\nexport function iconConfirm() {\n\treturn (\n\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M9 16.17L4.83 12L3.41 13.41L9 19L21 7L19.59 5.59L9 16.17Z\"/>\n\t\t</svg>\n\t);\n};\n\nexport function iconShuffle () {\n\treturn (\n\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M10.59 9.17L5.41 4L4 5.41L9.17 10.58L10.59 9.17ZM14.5 4L16.54 6.04L4 18.59L5.41 20L17.96 7.46L20 9.5V4H14.5ZM14.83 13.41L13.42 14.82L16.55 17.95L14.5 20H20V14.5L17.96 16.54L14.83 13.41Z\" />\n\t\t</svg>\n\t);\n};\n\nexport function iconClear() {\n\treturn (\n\t\t<svg viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M3.8995 3.89949C-0.00373149 7.80272 -0.00373149 14.1384 3.8995 18.0416C7.80273 21.9449 14.1384 21.9449 18.0416 18.0416C21.9449 14.1384 21.9449 7.80272 18.0416 3.89949C14.1384 -0.00373506 7.80273 -0.0037354 3.8995 3.89949ZM15.2132 8.14213L12.3848 10.9706L15.2132 13.799L13.799 15.2132L10.9706 12.3848L8.14214 15.2132L6.72792 13.799L9.55635 10.9706L6.72792 8.14213L8.14214 6.72792L10.9706 9.55635L13.799 6.72792L15.2132 8.14213Z\"/>\n\t\t</svg>\n\t);\n}\n","import React, {useState} from \"react\";\nimport PatternSelect from './PatternSelect';\nimport Actions from \"./Actions\";\n\nfunction shuffle(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nfunction lettersToState(letters) {\n    return letters.map((x) => ({l: x, used: false}));\n}\n\nconst Guessbox = ({propsLetters, onGuess, onReload, renderHistory, elapsed}) => {\n    const [letters, setLetters] = useState(lettersToState(propsLetters));\n    const [value, setValue] = useState(\"\");\n\n    React.useEffect(()=>setLetters(lettersToState(propsLetters)), [propsLetters])\n\n    function handleSubmit(val) {\n        if (val.length < 3)\n            return;\n        onGuess(val);\n        clear();\n    }\n\n    function handleShuffle() {\n        setLetters(shuffle(letters));\n    }\n\n    function handleClear() {\n        clear();\n    }\n\n    function clear() {\n        setLetters(letters.map(l => ({...l, used:false})));\n        setValue(\"\");\n    }\n\n    return (\n        <>\n            <div>\n                <div className=\"c-word\">\n                    { value &&\n                        <div className=\"c-word__container\">\n                            {Array.from(value).map((l,i) => (\n                                <span key={i}>{l}</span>\n                            ))}\n                        </div>\n\n                    }\n                </div>\n                <React.Fragment key={JSON.stringify(letters)}>\n                <PatternSelect\n                    letters={letters}\n                    onClear={handleClear}\n                    setValue={setValue}\n                    onSubmit={handleSubmit}\n                />\n                </React.Fragment>\n\n              <span class=\"elapsed\">{Math.floor(elapsed/60)}:{elapsed%60}</span>\n            </div>\n          <Actions renderHistory={renderHistory}\n                   onShuffle={handleShuffle}\n                   onReload={onReload} />\n        </>\n    );\n};\n\nexport default Guessbox;\n","import React from \"react\";\nimport {iconBlack} from \"./Svg\"\n\nconst Pad = ({pad, rows, cols, hintLimit, onHint, guesses, score}) => {\n    function renderCell(x,y) {\n        let p = pad[[x,y]];\n        let k = x;\n        let l;\n        let opt = {};\n        if (p === undefined) {\n            opt.className=\"cell black\";\n            l = iconBlack();\n        } else if (p.guess === null && (p.hint || 0) < hintLimit) {\n            opt.className=\"cell empty\";\n            opt.onClick = e => onHint(x,y);\n            l=\" \";\n        } else if (p.guess === null && (p.hint || 0) >= hintLimit) {\n            opt.className=\"cell\";\n            l=p.l;\n        } else if (p.guess < guesses.length) {\n            opt.className=\"cell solved\";\n            l=p.l;\n        } else {\n            opt.className=\"cell solved guessed\";\n            l=p.l;\n        }\n\n        if (p && p.hint && p.hint >= hintLimit) {\n            opt.className += \" hint\";\n        }\n\n        return (\n\t\t\t\t\t<div {...opt} key={k}>\n\t\t\t\t\t\t\t<span>{l}</span>\n\t\t\t\t\t</div>\n        );\n    }\n\n    function renderRow(y) {\n        return (\n            <div className=\"row\" key={y}>\n                {cols.map(x => renderCell(x,y))}\n            </div>\n        );\n    }\n\n    function renderPad() {\n    \t// todo converted from table\n        return (\n            <>\n              <div className=\"grid\">\n\t\t\t\t        {rows.map(y => renderRow(y))}\n              </div>\n              <div className=\"score\">\n                <span className=\"guess\"> g {score.guess}/{score.words} </span>\n                <span className=\"known\"> k {score.known}/{score.unused} </span>\n                <span className=\"miss\"> m {score.miss} </span>\n                <span className=\"repeat\"> r {score.repeat} </span>\n              </div>\n            </>\n        );\n    }\n\n    return (\n        <>\n            {renderPad()}\n        </>\n    );\n};\n\nexport default Pad;\n","import React from \"react\";\nimport { version } from '../package.json';\nimport Guessbox from './Guessbox';\nimport Pad from \"./Pad\";\n\nclass Game extends React.Component {\n    renderHistory() {\n        function renderLi(w, i, a) {\n            return (\n                <span key={w.k}\n                      className={((w.guess) ? \"guess\" :\n                                  ((w.known) ? \"known\" : \"weird\"))}>\n                  {w.w} {w.repeat &&\n                         <span>\n                           {\"➰\".repeat(w.repeat)}\n                         </span>}\n                  {(i < a.length - 1) && \", \"}\n                </span>);\n        }\n        return (\n            <div className=\"c-history\">\n              <p className=\"known\">\n                {this.props.history.filter((w)=>w.known && !w.guess).map(renderLi)}\n              </p>\n              <hr/>\n              <p className=\"unknown\">\n                {this.props.history.filter((w)=>!w.known && !w.guess).map(renderLi)}\n              </p>\n              <span className=\"app-version\">version: { version }</span>\n            </div>\n        );}\n\n\n    render() {\n        return (\n            <div style={{display: \"flex\", flexDirection:\"column\", justifyContent:\"space-between\", height: \"100vh\"}} className=\"game\">\n              <Pad\n                pad={this.props.pad}\n                cols={this.props.cols}\n                rows={this.props.rows}\n                hintLimit={this.props.hintLimit}\n                onHint={this.props.onHint}\n                guesses={this.props.guesses}\n                score={this.props.score} />\n              <Guessbox\n                propsLetters={this.props.letters}\n                onGuess={this.props.onGuess}\n                onReload={this.props.onReload}\n                renderHistory={() => this.renderHistory()}\n                elapsed={this.props.elapsed} />\n            </div>\n        );\n    }\n}\nexport default Game;\n","import React from \"react\";\nimport { getCrossword } from './static.js';\nimport Game from \"./Game\"\n\nconst directions = {\n    Down: start => (i => [start[0], start[1] + i]),\n    Across: start => (i => [start[0] + i, start[1]])\n};\n\nfunction mapDirection(word) {\n    return directions[word.d](word.s);\n}\n\nfunction mapWord(word) {\n    const dir = mapDirection(word);\n    const letters = Array.from(word.w);\n    const items = letters.map((l,i) => [l, dir(i)]);\n    return items;\n}\n\nfunction calculatePad(crossword) {\n    let pad = Object();\n    for(const word of crossword.words) {\n        for(const [l, pos] of mapWord(word)) {\n            pad[pos] = {\n                l:l,\n                guess:null\n            };\n        }\n    }\n    return pad;\n}\n\nfunction range(x) {\n    let iter = [];\n    for(let i = 0; i < x; i++) {\n        iter.push(i);\n    }\n    return iter;\n}\n\nfunction inc(x) {\n    return (x||0) + 1;\n}\n\nconst schema_migrations = {\n    // each migration is keyed from older version and must produce either:\n    // - the state for the next version, or\n    // - null if migration is not possible\n    0: (state) => ({...state,\n                    schema: 1}),\n    1: (state) => ({...state,\n                    schema: 2,\n                    gameplay: {previous: 0, start: Date.now(), current: 0}}),\n};\n\nconst state_schema_version = 2;\n\nfunction validate_schema_migrations() {\n    for (const i of range(state_schema_version)) {\n        if (i in schema_migrations) {\n            continue;\n        }\n        alert(\"Missing schema_migrations[\"+i+\"], add it.\");\n        return false;\n    }\n    if (Object.keys(schema_migrations).length != state_schema_version) {\n        alert(\"Weird schema_migrations, fix it.\");\n        return false;\n    }\n    return true;\n}\n\nfunction stateFromCrossword(crossword) {\n    const words = new Set(crossword.words.map((w)=>w.w));\n    return {\n        // Bump state_schema above when you muck with state.\n        // and implement the schema_migration, too\n        schema: state_schema_version,\n        history: [],\n        pad: calculatePad(crossword),\n        guesses: [],\n        score: { guess: 0, known: 0, miss: 0, repeat:0, words:words.size, unused:crossword.unused.length },\n        cols: range(crossword.size[0]),\n        rows: range(crossword.size[1]),\n        crossword: crossword,\n        letters: Array.from(crossword.letters).slice().sort(),\n        gameplay: {previous: 0, start: Date.now(), current: 0},\n        // see above for state schema changes\n    };\n}\n\nconst STATE_KEY = 'game.state';\n\nfunction restoreState() {\n    const store = window.localStorage;\n    if (!store) {\n        return undefined;\n    }\n    const ser = store.getItem(STATE_KEY);\n    if (!ser) {\n        return undefined;\n    }\n    if (!validate_schema_migrations()) {\n        return undefined;\n    }\n    let state = JSON.parse(ser);\n    while (state && state.schema < state_schema_version) {\n        state = schema_migrations[state.schema](state);\n    }\n    state = {...state,\n            gameplay: {\n                ...state.gameplay,\n                current: 0,\n                start: Date.now()}};\n    return state;\n}\n\nfunction saveState(state) {\n    const store = window.localStorage;\n    if (!store) {\n        return;\n    }\n    state = {...state,\n             gameplay: {\n                 previous: state.gameplay.previous + state.gameplay.current,\n                 current: 0\n             }};\n    const ser = JSON.stringify(state);\n    store.setItem(STATE_KEY, ser);\n}\n\nclass GameLogic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = restoreState() || stateFromCrossword(getCrossword());\n        setInterval(() => this.handleTick(), 1000);\n    }\n\n    handleTick() {\n        const state = this.state;\n        const elapsed = Math.floor((Date.now() - state.gameplay.start) / 1000);\n        if (elapsed != state.gameplay.current) {\n            this.setState({\n                ...state,\n                gameplay: {\n                    ...state.gameplay,\n                    current: elapsed\n                }\n            });\n        }\n    }\n\n    handleReload() {\n        const state = stateFromCrossword(getCrossword());\n        saveState(state);\n        this.setState(state);\n    }\n\n\n    handleGuess(w) {\n        const is_w = x => x.w === w;\n        const fnot = f => ((...args) => !f(...args));\n\n        let history_entry;\n        let history = this.state.history;\n        let guesses = this.state.guesses;\n        let pad = this.state.pad;\n        const score = this.state.score;\n        let score_update = {};\n        const hits = this.state.crossword.words.filter(is_w);\n        if (hits.length > 0) {\n            pad = {...this.state.pad};\n            guesses = guesses.concat([w]);\n            history_entry = {w:w, k:history.length, guess:true};\n            score_update = {guess: inc(score.guess)};\n            for(const hit of hits) {\n                for(const [l, pos] of mapWord(hit)) {\n                    pad[pos] = {\n                        ...pad[pos],\n                        l:l,\n                        guess:guesses.length\n                    };\n                }\n            }\n        } else {\n            const known = this.state.crossword.unused.find(x=>x===w);\n            history_entry = {w:w, k:history.length, guess:false, known:!!known};\n            if (known) {\n                score_update = {known: inc(score.known)};\n            } else {\n                score_update = {miss: inc(score.miss)};\n            }\n        }\n\n        const repeat = history.find(is_w);\n        if (repeat) {\n            history = [\n                {\n                    ...repeat,\n                    repeat: 1 + (repeat.repeat || 0)}\n            ].concat(history.filter(fnot(is_w)));\n            score_update = {repeat: inc(score.repeat)};\n        } else {\n            history = [history_entry].concat(history);\n        }\n\n        const newState = {\n            ...this.state,\n            history: history,\n            pad: pad,\n            guesses: guesses,\n            score: {...score, ...score_update}\n        };\n        saveState(newState);\n        this.setState(newState);\n    }\n\n    handleHint(x,y) {\n        let history = this.state.history;\n        let pad = {...this.state.pad};\n        let cell = pad[[x,y]];\n        const w = (\"?\" + x + ',' + y);\n        history = [{x:x, y:y,\n                    k:history.length,\n                    hint:cell.l,\n                    w: w\n                   }].concat(history);\n        pad[[x,y]] = {\n            ...cell,\n            hint: 1 + (cell.hint || 0)\n        };\n        this.setState({\n            ...this.state,\n            history: history,\n            pad: pad\n        });\n    }\n\n\n    render() {\n\n        const state = this.state;\n        return (\n              <Game\n                pad={state.pad}\n                cols={state.cols}\n                rows={state.rows}\n                hintLimit={this.props.hintLimit}\n                guesses={state.guesses}\n                score={state.score}\n                letters={state.letters}\n                history={state.history}\n                elapsed={state.gameplay.previous + state.gameplay.current}\n                onHint={(x,y) => this.handleHint(x,y)}\n                onGuess={(w) => this.handleGuess(w)}\n                onReload={() => this.handleReload()}\n\t\t\t\t\t\t    />\n        );\n    }\n}\nexport default GameLogic;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/main.scss';\nimport \"./styles/patternlock.css\";\nimport GameLogic from './GameLogic';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <GameLogic hintLimit={5} />\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}